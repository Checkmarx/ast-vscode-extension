name: Update AST CLI JavaScript Wrapper Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Specify a version (e.g., 0.0.124). Leave empty for the latest official version."
        required: false
        default: ""

jobs:
  update-js-wrapper:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up npm Authentication
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PERSONAL_ACCESS_TOKEN }}" > ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc

      - name: Determine Version
        id: get_version
        run: |
          # Enable detailed debugging
          set -x

          # Check if a version input was provided
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            VERSION="${{ github.event.inputs.version }}"
            echo "Input version provided: $VERSION"
          else
            echo "No input version provided. Fetching the latest release version from GitHub API..."
            # Fetch the latest release tag from the GitHub API
            API_RESPONSE=$(curl -s "https://api.github.com/repos/CheckmarxDev/ast-cli-javascript-wrapper/releases")
            echo "API response received: $API_RESPONSE"

            # Extract the latest semantic version tag
            VERSION=$(echo "$API_RESPONSE" | jq -r '[.[] | .tag_name | select(test("^v?[0-9]+\\.[0-9]+\\.[0-9]+$"))] | sort_by(split(".") | map(tonumber)) | .[-1]')
            echo "Extracted version: $VERSION"
          fi

          # Remove leading 'v' if present
          VERSION="${VERSION#v}"
          echo "Normalized version (without leading 'v'): $VERSION"

          # Validate the extracted version
          if [[ -z "$VERSION" || "$VERSION" == "null" ]]; then
            echo "Error: Failed to determine a valid version."
            exit 1
          fi

          # Export the VERSION variable for subsequent steps
          echo "VERSION=$VERSION" >> $GITHUB_ENV


      - name: Update package.json
        run: |
          sed -i "s|\"@checkmarxdev/ast-cli-javascript-wrapper\": \"[^\"]*\"|\"@checkmarxdev/ast-cli-javascript-wrapper\": \"${VERSION}\"|" package.json

      - name: Install Dependencies and Update package-lock.json
        run: |
          npm install

      - name: Commit Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add package.json package-lock.json
          git commit -m "Update AST CLI JavaScript Wrapper to version ${VERSION}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          commit-message: Update AST CLI JavaScript Wrapper to version ${{ env.VERSION }}
          title: Update AST CLI JavaScript Wrapper to version ${{ env.VERSION }}
          body: |
            Updates the AST CLI JavaScript Wrapper to version `${{ env.VERSION }}`

            Auto-generated by [create-pull-request][2]
          labels: cxone
          branch: other/update_js_wrapper_${{ env.VERSION }}
