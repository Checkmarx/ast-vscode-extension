name: Release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
          
      - run: | 
          git config user.name vscode-releases
          git config user.email vscode-releases@github.com

      - name: Authenticate with GitHub package registry
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install

      - name: Install VSCE
        run: npm install -g vsce

      - name: Package .vsix file
        run: vsce package ${{ env.RELEASE_VERSION }}
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          generate_release_notes: true
          files: ast-results-${{ env.RELEASE_VERSION }}.vsix
  
      - name: Publish
        env:
          MARKET_TOKEN: ${{ secrets.MARKET_TOKEN }}
        if: env.MARKET_TOKEN != null
        run: vsce publish -p ${{ env.MARKET_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get latest relase notes
        id: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          body_release="$(gh api -H "Accept: application/vnd.github.v3+json" /repos/Checkmarx/ast-vscode-extension/releases/latest | jq -r '.body' )"
          body_release="${body_release//$'\n'/'%0A'}"
          echo "::set-output name=body_release::$body_release"
      - name: Converts Markdown to HTML
        id: convert
        uses: lifepal/markdown-to-html@v1.1
        with:
          text: "${{ steps.release.outputs.body_release }}"

      - name: Clean html
        id: clean
        run: |
          clean="$(echo "${{ steps.convert.outputs.html }}" | awk '{gsub(/id=.[a-z]+/,"");print}' | tr -d '\n')"
          echo "$clean"
          echo "::set-output name=clean::$clean"
      - name: Send a Notification
        id: notify
        uses: thechetantalwar/teams-notify@v2
        with:
          teams_webhook_url: ${{ secrets.TEAMS_WEBHOOK_URI }}
          message: "${{ steps.clean.outputs.clean }}"